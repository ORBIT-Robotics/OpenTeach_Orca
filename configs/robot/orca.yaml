robot_name: orca_hand

# Detector used to teleoperate the robot
detector:
  _target_: openteach.components.detector.oculus.OculusVRHandDetector
  host: ${host_address}
  oculus_port: ${oculus_receiver_port}
  keypoint_pub_port: ${keypoint_port}
  button_port: ${resolution_button_port}
  button_publish_port: ${resolution_button_publish_port}
  teleop_reset_port: ${teleop_reset_port}
  teleop_reset_publish_port: ${teleop_reset_publish_port}

# Transformation classes used to transform the keypoints
transforms:
  - 
    _target_: openteach.components.detector.keypoint_transform.TransformHandPositionCoords
    host: ${host_address}
    keypoint_port: ${keypoint_port}
    transformation_port: ${transformed_position_keypoint_port}
    moving_average_limit: 1

# Visualizers used to visualize the keypoints stream
visualizers:
  -
    _target_: openteach.components.visualizers.visualizer_2d.Hand2DVisualizer
    host: ${host_address}
    transformed_keypoint_port: ${transformed_position_keypoint_port}
    oculus_feedback_port: ${oculus_graph_port}
    display_plot: ${visualize_right_2d}

# Operators used to retarget the keypoints
operators:
  - 
    _target_: openteach.components.operators.orca_operator.OrcaOperator
    host: ${host_address}
    transformed_keypoints_port: ${transformed_position_keypoint_port}
    config:
      handedness: right           # or "left" (flips abduction sign)
      thumb_dip_scale: 0.3        # DIP â‰ˆ scale * IP for thumb
      enable_wrist: true          # estimate wrist from palm tilt
      joint_gain: {}              # per-joint multipliers (optional)
      joint_bias: {}              # per-joint offsets in radians (optional)

# List of controller classes used (robot wrappers)
controllers:
  -
    _target_: openteach.robot.orca.OrcaHand

# Information to be recorded by the robot 
recorded_data:
  - 
    - joint_states
    - commanded_joint_states
